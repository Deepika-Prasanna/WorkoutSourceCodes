/*
 * 1. Eager Initialization (Thread-safe):
         In this approach, the instance is created when the class is loaded. It's simple and effective but might create an instance 
         even if it's never used.
 */


package com.deepu.singletondesingpattern;

public class SingletonEagerInitialization {
	
	private static SingletonEagerInitialization instance = new SingletonEagerInitialization();
	
	private SingletonEagerInitialization() {
		
	}

	public static SingletonEagerInitialization getInstance() {
		return instance;
	}
}
