package com.deepu.singletondesingpattern;

public class SingleTonDoubleCheckedLockingTesting implements Runnable{

  private static SingleTonDoubleCheckedLockingTesting instance;
  static SingleTonDoubleCheckedLockingTesting singleTonInstance1;
  static SingleTonDoubleCheckedLockingTesting singleTonInstance2;
  
  private SingleTonDoubleCheckedLockingTesting() {
    
  }
  
  public static SingleTonDoubleCheckedLockingTesting getInstance() {
      if(instance == null){
        synchronized(SingleTonDoubleCheckedLockingTesting.class) {
          if(instance == null){
            instance = new SingleTonDoubleCheckedLockingTesting();
          }
        }
        
      }
      return instance;
  }
  
  @Override
  public void run(){
    
  }
  
  public static void main(String[] args) {
	  
	singleTonInstance1 = SingleTonDoubleCheckedLockingTesting.getInstance();
	singleTonInstance2 = SingleTonDoubleCheckedLockingTesting.getInstance();
    
    Thread thread1 = new Thread(singleTonInstance1);
    thread1.start();
    
    Thread thread2 = new Thread(singleTonInstance2);
    thread2.start();
    
    System.out.println(singleTonInstance1);
     System.out.println(singleTonInstance2);
    
    
  }

}